{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'white',\n    borderRadius: 40,\n    alignSelf: 'flex-start'\n  },\n  text: {\n    fontWeight: 'bold',\n    flex: 4,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text2: {\n    fontWeight: 'bold'\n  },\n  post: {\n    width: 260,\n    backgroundColor: '#C0E2FB',\n    padding: 5,\n    borderRadius: 20,\n    top: 20,\n    marginBottom: 20,\n    elevation: 20,\n    shadowColor: '#52006A',\n    flexDirection: 'row'\n  },\n  button: {\n    backgroundColor: '#F1B59D',\n    borderTopEndRadius: 20,\n    borderBottomEndRadius: 20,\n    flex: 2,\n    justifyContent: 'center',\n    paddingLeft: 10\n  }\n});\n\nfunction request_user(id, token) {\n  var xhttp = fetch('http://localhost:3333/api/1.0.0/user/' + id + '/friends', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Authorization': token\n    }\n  }).then(function (response) {\n    return response.text();\n  }).then(function (text) {\n    if (text != 'OK') {\n      Alert.alert(\"Request\", text, [{\n        text: \"OK\"\n      }]);\n    }\n  }).catch(function (res) {\n    console.log(res);\n  });\n}\n\nvar SpRequest = function SpRequest(props) {\n  return _jsxs(View, {\n    style: [styles.post],\n    children: [_jsx(View, {\n      style: styles.image\n    }), _jsx(View, {\n      style: styles.text,\n      children: _jsxs(Text, {\n        style: styles.text2,\n        children: [props.user_givenname, \" \", props.user_familyname]\n      })\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: function onPress() {\n        return request_user(props.user_id, props.token);\n      },\n      children: _jsx(Text, {\n        style: [styles.pressText, {\n          color: '#e86868'\n        }],\n        children: \"Request\"\n      })\n    })]\n  }, props.user_id);\n};\n\nexport default SpRequest;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/components/request.js"],"names":["React","useState","useEffect","useNavigation","styles","StyleSheet","create","image","width","height","backgroundColor","borderRadius","alignSelf","text","fontWeight","flex","alignItems","justifyContent","text2","post","padding","top","marginBottom","elevation","shadowColor","flexDirection","button","borderTopEndRadius","borderBottomEndRadius","paddingLeft","request_user","id","token","xhttp","fetch","method","headers","then","response","Alert","alert","catch","res","console","log","SpRequest","props","user_givenname","user_familyname","user_id","pressText","color"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAE7BC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAAE,EADL;AAEFC,IAAAA,MAAM,EAAE,EAFN;AAGFC,IAAAA,eAAe,EAAE,OAHf;AAIFC,IAAAA,YAAY,EAAE,EAJZ;AAKFC,IAAAA,SAAS,EAAE;AALT,GAFuB;AAS7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,MADV;AAEFC,IAAAA,IAAI,EAAE,CAFJ;AAGFC,IAAAA,UAAU,EAAC,QAHT;AAIFC,IAAAA,cAAc,EAAE;AAJd,GATuB;AAe7BC,EAAAA,KAAK,EAAE;AACHJ,IAAAA,UAAU,EAAE;AADT,GAfsB;AAkB7BK,EAAAA,IAAI,EAAE;AACFX,IAAAA,KAAK,EAAE,GADL;AAEFE,IAAAA,eAAe,EAAE,SAFf;AAGFU,IAAAA,OAAO,EAAE,CAHP;AAIFT,IAAAA,YAAY,EAAE,EAJZ;AAKFU,IAAAA,GAAG,EAAE,EALH;AAMFC,IAAAA,YAAY,EAAE,EANZ;AAOFC,IAAAA,SAAS,EAAE,EAPT;AAQFC,IAAAA,WAAW,EAAE,SARX;AASFC,IAAAA,aAAa,EAAE;AATb,GAlBuB;AA6B7BC,EAAAA,MAAM,EAAC;AACHhB,IAAAA,eAAe,EAAE,SADd;AAEHiB,IAAAA,kBAAkB,EAAE,EAFjB;AAGHC,IAAAA,qBAAqB,EAAE,EAHpB;AAIHb,IAAAA,IAAI,EAAE,CAJH;AAKHE,IAAAA,cAAc,EAAE,QALb;AAMHY,IAAAA,WAAW,EAAE;AANV;AA7BsB,CAAlB,CAAf;;AAuCA,SAASC,YAAT,CAAuBC,EAAvB,EAA0BC,KAA1B,EAAgC;AAC5B,MAAMC,KAAK,GAAGC,KAAK,CAAC,0CAAwCH,EAAxC,GAA2C,UAA5C,EAAwD;AACvEI,IAAAA,MAAM,EAAE,MAD+D;AAEvEC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,yBAAmBJ;AAHZ;AAF8D,GAAxD,CAAL,CAQXK,IARW,CAQN,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACzB,IAAT,EAAd;AAAA,GARM,EASXwB,IATW,CASN,UAACxB,IAAD,EAAU;AACd,QAAIA,IAAI,IAAI,IAAZ,EAAiB;AACb0B,MAAAA,KAAK,CAACC,KAAN,CACE,SADF,EAEE3B,IAFF,EAEO,CAAC;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAD,CAFP;AAID;AAEJ,GAjBW,EAkBX4B,KAlBW,CAkBL,UAAUC,GAAV,EAAc;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GApBW,CAAd;AAqBD;;AAGH,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAEzB,SAEI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC1C,MAAM,CAACe,IAAR,CAAb;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACG;AAApB,MADJ,EAGI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACS,IAApB;AAAA,gBACA,MAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACc,KAApB;AAAA,mBAA6B4B,KAAK,CAACC,cAAnC,OAAoDD,KAAK,CAACE,eAA1D;AAAA;AADA,MAHJ,EAQI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAE5C,MAAM,CAACsB,MAAzB;AAAmC,MAAA,OAAO,EAAE;AAAA,eAAII,YAAY,CAACgB,KAAK,CAACG,OAAP,EAAeH,KAAK,CAACd,KAArB,CAAhB;AAAA,OAA5C;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC5B,MAAM,CAAC8C,SAAR,EAAmB;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAnB,CAAb;AAAA;AAAA;AADF,MARJ;AAAA,KAAiCL,KAAK,CAACG,OAAvC,CAFJ;AAgBH,CAlBD;;AAqBA,eAAeJ,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Pressable, Alert } from 'react-native';\n\nimport { useNavigation } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n\n    image:{\n        width: 40,\n        height: 40,\n        backgroundColor: 'white',\n        borderRadius: 40,\n        alignSelf: 'flex-start',\n    },\n    text: {\n        fontWeight: 'bold',\n        flex: 4,        \n        alignItems:'center',\n        justifyContent: 'center'\n    },\n    text2: {\n        fontWeight: 'bold',\n    },\n    post: {        \n        width: 260,\n        backgroundColor: '#C0E2FB', \n        padding: 5,\n        borderRadius: 20,\n        top: 20,\n        marginBottom: 20,\n        elevation: 20,\n        shadowColor: '#52006A',\n        flexDirection: 'row'\n    },\n    button:{        \n        backgroundColor: '#F1B59D',\n        borderTopEndRadius: 20,\n        borderBottomEndRadius: 20, \n        flex: 2,\n        justifyContent: 'center',\n        paddingLeft: 10      \n    }\n})\n\nfunction request_user (id,token){\n    const xhttp = fetch('http://localhost:3333/api/1.0.0/user/'+id+'/friends', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Authorization': token,\n        }\n      })\n      .then((response) => response.text())\n      .then((text) => {\n        if (text != 'OK'){\n            Alert.alert(\n              \"Request\",\n              text,[{ text: \"OK\"}]\n            );\n          }\n                        \n      })\n      .catch(function (res){\n        console.log(res)\n      });\n  }\n\n\nconst SpRequest = (props) => {\n    \n    return (\n        //add function to get total posts from props.username\n        <View style={[styles.post]} key={props.user_id}>\n            <View style={styles.image}>            \n            </View>\n            <View style={styles.text}>\n            <Text style={styles.text2} >{props.user_givenname} {props.user_familyname}</Text> \n            </View>\n                       \n\n            <Pressable style={styles.button}   onPress={()=>request_user(props.user_id,props.token)}>\n              <Text style={[styles.pressText, {color: '#e86868'}]}>Request</Text>\n            </Pressable>\n\n        </View>\n    );\n}\n\n\nexport default SpRequest;"]},"metadata":{},"sourceType":"module"}