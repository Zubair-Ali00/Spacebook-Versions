{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  post1: {\n    flexDirection: 'row',\n    alignSelf: \"baseline\",\n    marginLeft: 10\n  },\n  image: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'white',\n    borderRadius: 40,\n    alignSelf: 'flex-start'\n  },\n  info: {\n    marginLeft: 10\n  },\n  text: {\n    fontWeight: 'bold'\n  },\n  button: {\n    width: 260,\n    backgroundColor: '#C0E2FB',\n    padding: 5,\n    borderRadius: 20,\n    top: 20,\n    marginBottom: 20,\n    elevation: 20,\n    shadowColor: '#52006A'\n  }\n});\n\nvar SpFriend = function SpFriend(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      SetPosts = _useState2[1];\n\n  var navigation = useNavigation();\n  var abortController = new AbortController();\n  var total = 0;\n  useEffect(function () {\n    var page = function page() {\n      var xhttp;\n      return _regeneratorRuntime.async(function page$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + props.user + '/post', {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': props.token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                SetPosts(text);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 2:\n              xhttp = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    page();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n  posts.map(function () {\n    total = total + 1;\n  });\n  return _jsx(Pressable, {\n    style: [styles.button, {\n      borderBottomStartRadius: 20\n    }],\n    onPress: function onPress() {\n      return navigation.navigate('FriendPage', {\n        id: props.user,\n        token: props.token\n      });\n    },\n    children: _jsxs(View, {\n      style: styles.post1,\n      children: [_jsx(View, {\n        style: styles.image\n      }), _jsxs(View, {\n        style: styles.info,\n        children: [_jsxs(Text, {\n          style: styles.text,\n          children: [props.first_name, \" \", props.last_name]\n        }), _jsxs(Text, {\n          children: [\"Posts: \", total]\n        })]\n      })]\n    })\n  });\n};\n\nexport default SpFriend;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/components/Friends.js"],"names":["React","useState","useEffect","useNavigation","styles","StyleSheet","create","post1","flexDirection","alignSelf","marginLeft","image","width","height","backgroundColor","borderRadius","info","text","fontWeight","button","padding","top","marginBottom","elevation","shadowColor","SpFriend","props","posts","SetPosts","navigation","abortController","AbortController","total","page","fetch","user","method","headers","token","then","response","json","catch","res","console","log","xhttp","cleanup","abort","map","borderBottomStartRadius","navigate","id","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Pressable } from 'react-native';\n\nimport { useNavigation } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n    post1:{\n        flexDirection: 'row',\n        alignSelf: \"baseline\", \n        marginLeft: 10, \n    },\n    image:{\n        width: 40,\n        height: 40,\n        backgroundColor: 'white',\n        borderRadius: 40,\n        alignSelf: 'flex-start'\n    },\n    info:{\n        marginLeft: 10,    \n    },\n    text: {\n        fontWeight: 'bold',\n    },\n    button: {        \n        width: 260,\n        backgroundColor: '#C0E2FB', \n        padding: 5,\n        borderRadius: 20,\n        top: 20,\n        marginBottom: 20,\n        elevation: 20,\n        shadowColor: '#52006A',\n    },\n})\n\n\n\nconst SpFriend = (props) => {\n    \n    \n    const [posts, SetPosts] = useState([]); \n\n\n    const navigation = useNavigation();\n    const abortController = new AbortController();\n\n    var total = 0;  \n\n    \n\n    useEffect(() => {\n    \n        const page = async () => {\n        \n          const xhttp = await fetch('http://localhost:3333/api/1.0.0/user/'+props.user+'/post', {\n                        method: 'GET',\n                        headers: {\n                          'Accept': 'application/json',\n                          'Content-Type': 'application/json',\n                          'X-Authorization': props.token,\n                        }\n                      })\n                      .then((response) => response.json())\n                      .then((text) => {                              \n                            SetPosts(text)\n                      })\n                      .catch(function (res){\n                        console.log(res)\n                      });\n      }\n    \n      page();\n    \n      return function cleanup(){\n        abortController.abort()\n      }\n    }, []);\n\n    posts.map(()=>{\n      total = total+1                      \n    })\n\n\n    return (\n        //add function to get total posts from props.username\n        <Pressable style={[styles.button, {borderBottomStartRadius: 20}]}  onPress={() => navigation.navigate('FriendPage', {id:props.user, token: props.token})}>\n                <View style={styles.post1}>\n\n                    <View style={styles.image}>            \n                    </View>\n\n                    <View style={styles.info}>\n                        <Text style={styles.text}>\n                            {props.first_name} {props.last_name} \n                        </Text>\n\n                        <Text>\n                            Posts: {total}\n                        </Text>                                            \n                    </View>\n\n                </View>                                                               \n        </Pressable>\n    );\n}\n\n\nexport default SpFriend;"]},"metadata":{},"sourceType":"module"}