{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DrawerLayoutAndroidBase } from \"react-native-web/dist/index\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from '@react-navigation/native';\nimport { backgroundColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  center: {\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  text: {\n    position: \"relative\",\n    top: '20%',\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 48,\n    lineHeight: 60,\n    color: 'black',\n    paddingBottom: 100\n  },\n  button: {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#8DCACE',\n    borderRadius: 10,\n    marginTop: 20,\n    paddingHorizontal: '10%',\n    paddingHorizontal: '10%',\n    alignSelf: 'center'\n  },\n  pressText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    alignSelf: 'center'\n  },\n  input: {\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowColor: 'rgba(0, 0, 0, 0.25)',\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    width: 200,\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  form: {\n    marginTop: '10%'\n  }\n});\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      auth = _useState10[0],\n      setAuth = _useState10[1];\n\n  useEffect(function () {\n    var getAuth = function getAuth() {\n      var data, auth;\n      return _regeneratorRuntime.async(function getAuth$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userAuth\"));\n\n            case 3:\n              data = _context.sent;\n              auth = JSON.parse(data);\n              setAuth(auth);\n\n              if (auth.id > 1) {\n                navigation.reset({\n                  index: 0,\n                  routes: [{\n                    name: 'MyPage'\n                  }]\n                });\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getAuth();\n  });\n\n  var go = function go() {\n    var data, xhttp;\n    return _regeneratorRuntime.async(function go$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = {};\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/login', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (text) {\n              var auth = {\n                id: text.id,\n                token: text.token\n              };\n\n              var save = function save() {\n                return _regeneratorRuntime.async(function save$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userAuth\", JSON.stringify(auth)));\n\n                      case 3:\n                        _context2.next = 8;\n                        break;\n\n                      case 5:\n                        _context2.prev = 5;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        console.log(_context2.t0);\n\n                      case 8:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, [[0, 5]], Promise);\n              };\n\n              save();\n              navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'MyPage'\n                }]\n              });\n            }).catch(function (res) {\n              setText(\"TRY AGAIN\");\n            }));\n\n          case 3:\n            xhttp = _context3.sent;\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.center,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"SPACEBOOK\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        placeholder: \"   email\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true,\n        placeholder: \"   password\",\n        keyboardType: \"default\"\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: go,\n        children: _jsx(Text, {\n          style: styles.pressText,\n          children: \"Login\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.push('Signup');\n        },\n        children: _jsx(Text, {\n          style: styles.pressText,\n          children: \"Signup\"\n        })\n      }), _jsx(Text, {\n        style: {\n          color: 'red',\n          alignSelf: 'center',\n          marginTop: 20\n        },\n        children: text\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/Pages/Login.js"],"names":["React","useEffect","useState","DrawerLayoutAndroidBase","useNavigation","backgroundColor","AsyncStorage","styles","StyleSheet","create","center","flex","flexDirection","alignItems","text","position","top","fontStyle","fontWeight","fontSize","lineHeight","color","paddingBottom","button","borderWidth","borderStyle","borderColor","borderRadius","marginTop","paddingHorizontal","alignSelf","pressText","letterSpacing","input","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","form","Login","navigation","name","setName","email","setEmail","password","setPassword","setText","auth","setAuth","getAuth","getItem","data","JSON","parse","id","reset","index","routes","console","log","go","fetch","method","headers","body","stringify","then","response","json","token","save","setItem","catch","res","xhttp","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextInput,Text, View, Button, StatusBar, StyleSheet, DrawerLayoutAndroidBase, Pressable } from 'react-native';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { backgroundColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst styles = StyleSheet.create({\n  center: {\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',    \n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    //justifyContent: 'space-between'\n  },\n  text:{\n    position: \"relative\",\n    top: '20%',\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 48,\n    lineHeight: 60,\n    color: 'black',\n    paddingBottom: 100\n  },\n  button:{\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#8DCACE',\n    //boxSizing: 'border-box',\n    borderRadius: 10,\n    marginTop: 20,\n    paddingHorizontal: '10%',\n    paddingHorizontal: '10%', \n    alignSelf: 'center'\n  },\n  pressText:{\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    alignSelf: 'center'\n  },\n  input:{\n    shadowOffset: {width: -2, height: 4},\n    shadowColor: 'rgba(0, 0, 0, 0.25)',\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    width: 200, \n    marginTop: 20, \n    alignItems: 'center'\n  },\n  form:{\n    marginTop: '10%'\n  }\n})\n\n\n\nexport default function Login ({navigation}){\n\n  const [name, setName] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n\n  const [text, setText] = useState(\"\");\n\n  const [auth, setAuth] = useState([]);\n\n\n  useEffect (() =>\n  {\n    const getAuth = async() =>{\n      try{\n        let data = await AsyncStorage.getItem(\"userAuth\");\n        var auth = JSON.parse(data)\n        //console.log(JSON.parse(auth))\n        //console.log(auth.id)\n\n        setAuth(auth);\n\n        //console.log(auth.id)\n\n        if(auth.id > 1){\n          navigation.reset({\n            index: 0,\n            routes: [{name: 'MyPage'}]\n          });\n        }\n      }catch(err) {\n        console.log(err)\n      }\n    }\n\n    getAuth();\n\n  });\n  \n  const go = async () => {\n\n    var data = {};\n\n    const xhttp = await fetch('http://localhost:3333/api/1.0.0/login', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({        \n                  email: email,\n                  password: password\n                })\n              })\n              .then((response) => response.json())\n              .then((text) => {     \n                \n                const auth = {\n                  id: text.id,\n                  token: text.token\n                }\n                \n                const save = async() => {\n                  try{\n                    await AsyncStorage.setItem(\"userAuth\", JSON.stringify(auth));                     \n                  }catch(err){\n                    console.log(err)\n                  }\n                }     \n                \n                save();\n\n                navigation.reset({\n                  index: 0,\n                  routes: [{name: 'MyPage'}]\n                });\n                })\n              .catch(function (res){\n                setText(\"TRY AGAIN\")\n              })\n\n  };\n\n\n  return (\n    <View style={styles.center}>\n\n\n\n        <Text style={styles.text}>\n          SPACEBOOK\n        </Text>\n\n        <View style={styles.form} >\n\n          <TextInput style={styles.input}\n              //style={styles.input}\n              onChangeText={(text) => setEmail(text)}\n              //value={number}\n              placeholder=\"   email\"\n              keyboardType='email-address'\n          />\n\n          <TextInput style={styles.input}\n              //style={styles.input}\n              onChangeText={(text) => setPassword(text)}\n              secureTextEntry={true}\n              placeholder=\"   password\"\n              keyboardType=\"default\"\n          />\n\n\n          <Pressable style={styles.button} onPress={go}>\n            <Text style={styles.pressText}>Login</Text>\n          </Pressable>\n\n\n          <Pressable style={styles.button} onPress={() => navigation.push('Signup')}>\n            <Text style={styles.pressText}>Signup</Text>\n          </Pressable>\n\n          <Text style={{color:'red', alignSelf:'center', marginTop: 20}}>\n            {text}\n          </Text>\n\n      </View>\n\n        <StatusBar style=\"auto\" />\n\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}