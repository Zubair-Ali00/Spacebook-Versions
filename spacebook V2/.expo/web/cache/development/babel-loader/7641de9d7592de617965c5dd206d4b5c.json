{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useRoute } from '@react-navigation/native';\nimport SpHeader from \"../components/header\";\nimport SpPost from \"../components/post\";\nimport { getCurrentTimestamp } from 'react-native/Libraries/Utilities/createPerformanceLogger';\nimport { clickProps } from 'react-native-web/dist/cjs/modules/forwardedProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  post: {\n    width: '90%',\n    backgroundColor: '#C0E2FB',\n    alignItems: 'center',\n    padding: 5,\n    borderRadius: 20,\n    top: 20,\n    marginBottom: 20,\n    elevation: 20,\n    shadowColor: '#52006A'\n  },\n  post1: {\n    flexDirection: 'row',\n    alignSelf: \"baseline\",\n    marginLeft: 10\n  },\n  image: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'white',\n    borderRadius: 40,\n    alignSelf: 'flex-start'\n  },\n  info: {\n    marginLeft: 10\n  },\n  text: {\n    fontWeight: 'bold'\n  },\n  post2: {\n    alignSelf: 'baseline',\n    marginLeft: 20,\n    flexDirection: 'column',\n    marginBottom: 15,\n    marginTop: 15\n  },\n  post3: {\n    flexDirection: 'row'\n  },\n  button: {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#8DCACE',\n    borderRadius: 10,\n    marginTop: 20,\n    paddingHorizontal: '10%',\n    paddingHorizontal: '10%',\n    alignSelf: 'center'\n  },\n  input: {\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowColor: 'rgba(0, 0, 0, 0.25)',\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    marginBottom: '10%',\n    paddingLeft: 30\n  }\n});\n\nfunction EditPost(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    post_id: \"\",\n    text: \"\",\n    timestamp: getCurrentTimestamp(),\n    author: {\n      user_id: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\"\n    },\n    numLikes: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var fetched = false;\n  var route = useRoute();\n  var id = route.params.user;\n  var postt = route.params.post;\n  useEffect(function () {\n    var abortController = new AbortController();\n\n    var page = function page() {\n      var xhttp;\n      return _regeneratorRuntime.async(function page$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + id + '/post/' + postt, {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': props.token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                setPost(text);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 2:\n              xhttp = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    page();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  var update_post = function update_post() {\n    var xhttp = fetch('http://localhost:3333/api/1.0.0/user/' + id + '/post/' + postt, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-Authorization': props.token\n      },\n      body: JSON.stringify({\n        post_id: post,\n        text: text,\n        timestamp: getCurrentTimestamp(),\n        author: {\n          user_id: post.author.user_id,\n          first_name: post.author.first_name,\n          last_name: post.author.last_name,\n          email: post.author.email\n        },\n        numLikes: post.numLikes\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (text) {\n      navigation.goBack();\n    }).catch(function (res) {\n      console.log(res);\n    });\n  };\n\n  var add_post = function add_post() {\n    var xhttp = fetch('http://localhost:3333/api/1.0.0/user/' + id + '/post', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-Authorization': props.token\n      },\n      body: JSON.stringify({\n        text: text\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (text) {\n      navigation.goBack();\n    }).catch(function (res) {\n      console.log(res);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.post,\n      children: [_jsxs(View, {\n        style: styles.post1,\n        children: [_jsx(View, {\n          style: styles.image\n        }), _jsx(View, {\n          style: styles.info,\n          children: _jsxs(Text, {\n            style: styles.text,\n            children: [props.first_name, \" \", props.last_name]\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          borderBottomColor: 'black',\n          borderBottomWidth: 1,\n          width: '100%',\n          paddingTop: 10\n        }\n      }), _jsxs(View, {\n        style: styles.post2,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"Previous text:\"\n        }), _jsx(Text, {\n          children: props.text\n        })]\n      }), _jsx(View, {\n        style: styles.post3,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(text) {\n            return setText(text);\n          },\n          placeholder: \"Enter New Text\",\n          keyboardType: \"default\"\n        })\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return update_post();\n        },\n        children: _jsx(Text, {\n          style: styles.pressText,\n          children: \"Update\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.pressText,\n          children: \"Cancel\"\n        })\n      })]\n    })]\n  });\n}\n\n;\nexport default EditPost;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/components/editPost.js"],"names":["React","useEffect","useState","useNavigation","useRoute","SpHeader","SpPost","getCurrentTimestamp","clickProps","styles","StyleSheet","create","post","width","backgroundColor","alignItems","padding","borderRadius","top","marginBottom","elevation","shadowColor","post1","flexDirection","alignSelf","marginLeft","image","height","info","text","fontWeight","post2","marginTop","post3","button","borderWidth","borderStyle","borderColor","paddingHorizontal","input","shadowOffset","shadowOpacity","shadowRadius","paddingLeft","EditPost","props","navigation","post_id","timestamp","author","user_id","first_name","last_name","email","numLikes","setPost","setText","fetched","route","id","params","user","postt","abortController","AbortController","page","fetch","method","headers","token","then","response","json","catch","res","console","log","xhttp","cleanup","abort","update_post","body","JSON","stringify","goBack","add_post","borderBottomColor","borderBottomWidth","paddingTop","pressText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, TextInput, View,Button, StyleSheet, Pressable } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport {useRoute} from '@react-navigation/native'\n\nimport SpHeader from '../components/header'\nimport SpPost from '../components/post'\nimport { getCurrentTimestamp } from 'react-native/Libraries/Utilities/createPerformanceLogger';\nimport { clickProps } from 'react-native-web/dist/cjs/modules/forwardedProps';\n\nconst styles = StyleSheet.create({\n  post:{\n      width: '90%',\n      backgroundColor: '#C0E2FB',\n      alignItems: 'center',\n      padding: 5,\n      borderRadius: 20,\n      top: 20,\n      marginBottom: 20,\n      elevation: 20,\n      shadowColor: '#52006A',\n  },\n  post1:{\n      flexDirection: 'row',\n      alignSelf: \"baseline\", \n      marginLeft: 10, \n  },\n  image:{\n      width: 40,\n      height: 40,\n      backgroundColor: 'white',\n      borderRadius: 40,\n      alignSelf: 'flex-start'\n  },\n  info:{\n      marginLeft: 10,    \n  },\n  text: {\n      fontWeight: 'bold',\n  },\n  post2:{\n      alignSelf: 'baseline',\n      marginLeft: 20,\n      flexDirection: 'column',\n      marginBottom: 15,\n      marginTop: 15,\n  },\n  post3:{\n      flexDirection: 'row',        \n  },\n  button:{\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#8DCACE',\n    //boxSizing: 'border-box',\n    borderRadius: 10,\n    marginTop: 20,\n    paddingHorizontal: '10%',\n    paddingHorizontal: '10%', \n    alignSelf: 'center'\n  },\n  input:{\n    shadowOffset: {width: -2, height: 4},\n    shadowColor: 'rgba(0, 0, 0, 0.25)',\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    width: '100%',\n    height: '100%', \n    alignItems: 'center',\n    marginBottom: '10%',\n    paddingLeft: 30\n  },\n})\n\n\n\n\nfunction EditPost(props) {\n  //const [info, setInfo] = useState({});\n\n  const navigation = useNavigation();\n\n  const [post,setPost] = useState({\n    post_id: \"\",\n    text: \"\",\n    timestamp: getCurrentTimestamp(),\n    author: {\n        user_id: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\"\n    },\n    numLikes: 0\n  });\n  const [text, setText] = useState(\"\");\n\n  var fetched = false;\n\n  const route = useRoute();\n\n  //console.log(\"Params are\" + route.params)\n  var id = route.params.user;\n  var postt = route.params.post;\n  //console.log(post)\n  //token = route.params.token;\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    \n    const page = async () => {\n      const xhttp = await fetch('http://localhost:3333/api/1.0.0/user/'+id+'/post/'+postt, {\n                    method: 'GET',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-Authorization': props.token,\n                    }\n                  })\n                  .then((response) => response.json())\n                  .then((text) => {                    \n                      setPost(text);                \n                      //console.log(post)\n                  })\n                  .catch(function (res){\n                    console.log(res)\n                  });\n      \n    }\n\n    page();\n\n    \n\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, []);\n\n  const update_post = () => {\n    const xhttp = fetch('http://localhost:3333/api/1.0.0/user/'+id+'/post/'+postt, {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Authorization': props.token,\n        },\n        body: JSON.stringify({\n            post_id: post,\n            text: text,\n            timestamp: getCurrentTimestamp(),\n            author: {\n                user_id: post.author.user_id,\n                first_name: post.author.first_name,\n                last_name: post.author.last_name,\n                email: post.author.email\n            },\n            numLikes: post.numLikes\n          })\n      })\n      .then((response) => response.text())\n      .then((text) => {     \n          //console.log(text)               \n          navigation.goBack()               \n      })\n      .catch(function (res){\n        console.log(res)\n      });\n  }\n\n  const add_post = () => {\n    const xhttp = fetch('http://localhost:3333/api/1.0.0/user/'+id+'/post', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Authorization': props.token,\n        },\n        body: JSON.stringify({\n            text: text\n          })\n      })\n      .then((response) => response.text())\n      .then((text) => {     \n          //console.log(text)               \n          navigation.goBack()               \n      })\n      .catch(function (res){\n        console.log(res)\n      });\n  }\n\n  \n    return (\n      <View>\n\n          <View style={styles.post}>\n                <View style={styles.post1}>\n\n                    <View style={styles.image}>            \n                    </View>\n\n                    <View style={styles.info}>\n                        <Text style={styles.text}>\n                          {props.first_name} {props.last_name}\n                        </Text>\n                                                \n                    </View>\n\n                </View>\n                \n                <View style={{\n                    borderBottomColor: 'black',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                    paddingTop: 10,\n                }}/>\n                \n                <View style={styles.post2}>\n                \n                    <Text style={styles.text}>\n                        Previous text: \n                    </Text>                    \n                    <Text>\n                        {props.text}\n                    </Text>\n\n                \n                \n                </View>                    \n\n                <View style={styles.post3}>\n\n                <TextInput\n                        style={styles.input}\n                        onChangeText={(text) => setText(text)}\n                        //value={text}\n                        placeholder=\"Enter New Text\"\n                        keyboardType='default'\n                    />\n    \n                    </View>\n                </View>\n         \n          \n          <View>\n\n          <Pressable style={styles.button} onPress={() => update_post() }>\n            <Text style={styles.pressText}>Update</Text>\n          </Pressable>\n\n          <Pressable style={styles.button}  onPress={() => navigation.goBack()}>\n            <Text style={styles.pressText}>Cancel</Text>\n          </Pressable>\n\n          </View>\n      </View> \n    )};\n\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}