{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useRoute } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport SpHeader from \"../components/header\";\nimport SpPost from \"../components/post\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  center: {\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  scroll: {\n    paddingBottom: \"100%\",\n    paddingLeft: 30,\n    paddingRight: 30,\n    width: '100%'\n  },\n  top: {\n    flexDirection: 'row',\n    top: '8%',\n    backgroundColor: '#C3E6FF',\n    borderRadius: 20,\n    width: '50%',\n    height: '6%'\n  },\n  top2: {\n    flexDirection: 'row',\n    top: '2%',\n    backgroundColor: '#c3e1ff',\n    borderRadius: 20,\n    width: '50%',\n    height: '6%'\n  },\n  button: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  posts: {\n    backgroundColor: 'white',\n    width: '100%',\n    top: '6%',\n    alignItems: 'center',\n    borderTopEndRadius: 20,\n    borderTopStartRadius: 20,\n    paddingBottom: '30%'\n  },\n  message: {\n    backgroundColor: 'white',\n    width: '40%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '5%',\n    borderRadius: 20\n  }\n});\n\nvar getData = function getData() {\n  var jsonValue;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@storage_Key'));\n\n        case 3:\n          jsonValue = _context.sent;\n          return _context.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nfunction MyPage(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingT = _useState6[0],\n      setLoadingT = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ref = _useState8[0],\n      setRef = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      auth = _useState10[0],\n      setAuth = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      det = _useState12[0],\n      setDet = _useState12[1];\n\n  var navigation = useNavigation();\n  var abortController = new AbortController();\n  useEffect(function () {\n    var getAuth = function getAuth() {\n      var data, auth;\n      return _regeneratorRuntime.async(function getAuth$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userAuth\"));\n\n            case 3:\n              data = _context2.sent;\n              auth = JSON.parse(data);\n              setAuth(auth);\n\n              if (Number.isInteger(auth.id)) {\n                setLoadingT(false);\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getAuth();\n  });\n  useEffect(function () {\n    var details = function details() {\n      var xhttp;\n      return _regeneratorRuntime.async(function details$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + auth.id, {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': auth.token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                setDet(text);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 2:\n              xhttp = _context3.sent;\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    details();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [loadingT]);\n  useEffect(function () {\n    var page = function page() {\n      var xhttp;\n      return _regeneratorRuntime.async(function page$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + auth.id + '/post', {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': auth.token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                setPosts(text);\n                setLoading(false);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 2:\n              xhttp = _context4.sent;\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    page();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [det, ref]);\n\n  if (loading) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Loading..\"\n      })\n    });\n  }\n\n  ;\n\n  if (auth.token == 0) {\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Login'\n      }]\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.center,\n    children: [_jsx(SpHeader, {\n      first_name: det.first_name,\n      last_name: det.last_name\n    }), _jsxs(View, {\n      style: styles.top,\n      children: [_jsx(Pressable, {\n        style: [styles.button, {\n          marginLeft: 3,\n          paddingLeft: 3\n        }],\n        onPress: function onPress() {\n          return navigation.navigate('ViewFriends');\n        },\n        children: _jsx(Text, {\n          style: [styles.pressText, {\n            color: '#e86868'\n          }],\n          children: \"View Friends\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('GetPost', {\n            user: auth.id,\n            action: \"add\",\n            post: 0,\n            token: auth.token\n          });\n        },\n        children: _jsx(Text, {\n          style: [styles.pressText, {\n            color: '#689be8'\n          }],\n          children: \"Add Post\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.posts,\n      children: [_jsxs(View, {\n        style: styles.top2,\n        children: [_jsx(Pressable, {\n          style: [styles.button, {\n            marginLeft: 3,\n            paddingLeft: 3\n          }],\n          onPress: function onPress() {\n            if (ref == true) {\n              setRef(false);\n            } else {\n              setRef(true);\n            }\n          },\n          children: _jsx(Text, {\n            style: [styles.pressText, {\n              color: '#e86868'\n            }],\n            children: \"Refresh\"\n          })\n        }), _jsx(Pressable, {\n          style: [styles.button, {\n            marginLeft: 3,\n            paddingLeft: 3\n          }],\n          onPress: function onPress() {\n            var auth = {\n              id: 0,\n              token: 0\n            };\n\n            var save = function save() {\n              return _regeneratorRuntime.async(function save$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.prev = 0;\n                      _context5.next = 3;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userAuth\", JSON.stringify(auth)));\n\n                    case 3:\n                      _context5.next = 8;\n                      break;\n\n                    case 5:\n                      _context5.prev = 5;\n                      _context5.t0 = _context5[\"catch\"](0);\n                      console.log(_context5.t0);\n\n                    case 8:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, [[0, 5]], Promise);\n            };\n\n            save();\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Login'\n              }]\n            });\n          },\n          children: _jsx(Text, {\n            style: [styles.pressText, {\n              color: '#e86868'\n            }],\n            children: \"Logout\"\n          })\n        })]\n      }), _jsx(ScrollView, {\n        contentContainerStyle: styles.scroll,\n        children: posts.map(function (post) {\n          return _jsx(SpPost, {\n            post: post.post_id,\n            user_id: auth.id,\n            user: true,\n            first_name: post.author.first_name,\n            last_name: post.author.last_name,\n            time: post.timestamp,\n            text: post.text,\n            likes: post.numLikes,\n            author: post.author.user_id,\n            token: auth.token\n          }, post.post_id);\n        })\n      })]\n    })]\n  });\n}\n\nexport default MyPage;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/Pages/MyPage.js"],"names":["React","useEffect","useState","useRoute","useNavigation","SpHeader","SpPost","SafeAreaView","AsyncStorage","styles","StyleSheet","create","center","backgroundColor","flexDirection","alignItems","scroll","paddingBottom","paddingLeft","paddingRight","width","top","borderRadius","height","top2","button","flex","justifyContent","posts","borderTopEndRadius","borderTopStartRadius","message","getData","getItem","jsonValue","JSON","parse","MyPage","route","setPosts","loading","setLoading","loadingT","setLoadingT","ref","setRef","auth","setAuth","det","setDet","navigation","abortController","AbortController","getAuth","data","Number","isInteger","id","console","log","details","fetch","method","headers","token","then","response","json","text","catch","res","xhttp","cleanup","abort","page","reset","index","routes","name","first_name","last_name","marginLeft","navigate","pressText","color","user","action","post","save","setItem","stringify","map","post_id","author","timestamp","numLikes","user_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View,ScrollView,Pressable, StyleSheet } from 'react-native';\n\nimport {useRoute} from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport SpHeader from '../components/header'\nimport SpPost from '../components/post'\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst styles = StyleSheet.create({\n  center: {\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',    \n    flexDirection: 'column',\n    alignItems: 'center',\n    //justifyContent: 'space-between'\n  },\n  scroll:{\n    paddingBottom: \"100%\",\n    paddingLeft: 30,\n    paddingRight: 30,\n    width: '100%'\n  },\n  top:{\n    flexDirection: 'row',\n    top: '8%',\n    backgroundColor: '#C3E6FF',\n    borderRadius: 20,\n    width: '50%', \n    height: '6%',\n  },\n  top2:{\n    flexDirection: 'row',\n    top: '2%',\n    backgroundColor: '#c3e1ff',\n    borderRadius: 20,\n    width: '50%', \n    height: '6%',\n  },\n  button:{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  posts:{\n    backgroundColor: 'white',\n    width: '100%',\n    top: '6%',\n    alignItems: 'center',\n    borderTopEndRadius: 20,\n    borderTopStartRadius : 20,\n    paddingBottom: '30%'\n  },\n  message:{\n    backgroundColor: 'white',\n    width: '40%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '5%',\n    borderRadius: 20\n  }\n})\n\nconst getData = async () => {\n  try {\n    const jsonValue = await AsyncStorage.getItem('@storage_Key')\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch(e) {\n    // error reading value\n  }\n}\n\n\nfunction MyPage({route}) {\n  //const [info, setInfo] = useState({});\n  const [posts,setPosts] = useState([]);  \n  \n  const [loading, setLoading] = useState(true);\n  const [loadingT, setLoadingT] = useState(true);\n  const[ref, setRef] = useState(true);\n\n  const [auth, setAuth] = useState([]);\n  const [det, setDet] = useState([]);\n\n\n  const navigation = useNavigation();\n\n  //const route = useRoute();\n  const abortController = new AbortController();\n\n\n  \n  //var id = route.params.text.id;\n  //var token = route.params.text.token;\n\n  useEffect (() =>\n  {\n    const getAuth = async() =>{\n      try{\n        let data = await AsyncStorage.getItem(\"userAuth\");\n        var auth = JSON.parse(data)\n        //console.log(JSON.parse(auth))\n        //console.log(auth.id)\n\n        setAuth(auth);\n\n        if(Number.isInteger(auth.id)){\n          setLoadingT(false);\n        }\n      }catch(err) {\n        console.log(err)\n      }\n    }\n\n    getAuth();\n  });\n  \n  useEffect(() => {\n    \n    const details = async () => {          \n      const xhttp = await fetch('http://localhost:3333/api/1.0.0/user/'+auth.id, {\n                    method: 'GET',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-Authorization': auth.token,\n                    }\n                  })\n                  .then((response) => response.json())\n                  .then((text) => {          \n                    setDet(text)\n                  })\n                  .catch(function (res){\n                    console.log(res)\n                  });\n  }\n\n  details();\n\n  return function cleanup(){\n    abortController.abort()\n  }\n},[loadingT]);\n  \n  useEffect(() => {\n    \n    const page = async () => {          \n      const xhttp = await fetch('http://localhost:3333/api/1.0.0/user/'+auth.id+'/post', {\n                    method: 'GET',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-Authorization': auth.token,\n                    }\n                  })\n                  .then((response) => response.json())\n                  .then((text) => {          \n                      setPosts(text);                                        \n                      setLoading(false);\n                  })\n                  .catch(function (res){\n                    console.log(res)\n                  });\n  }\n\n  page();\n\n  return function cleanup(){\n    abortController.abort()\n  }\n}, [det, ref]);\n  \n  if(loading){\n    return (\n      <View>\n        <Text>\n          Loading..\n        </Text>\n      </View>\n    );\n  };\n\n  if (auth.token == 0){\n    navigation.reset({\n      index: 0,\n      routes: [{name: 'Login'}]\n    })\n  }\n\n  return (    \n    <View style={styles.center}>\n        <SpHeader\n          first_name={det.first_name}\n          last_name={det.last_name}\n        />\n      \n\n      <View style={styles.top}>\n\n        <Pressable style={[styles.button, {marginLeft: 3, paddingLeft: 3} ]}  onPress={() => navigation.navigate('ViewFriends')}>\n              <Text style={[styles.pressText, {color: '#e86868'}]}>View Friends</Text>\n        </Pressable>\n        \n        <Pressable style={styles.button} onPress={() => navigation.navigate('GetPost', {                            \n                              user: auth.id,\n                              action: \"add\",\n                              post: 0,\n                              token: auth.token\n                          })}>\n          <Text style={[styles.pressText, {color: '#689be8'}]}>Add Post</Text>\n        </Pressable>\n    \n      </View>\n\n      \n\n      <View style={styles.posts}>\n\n      <View style={styles.top2}>\n\n      <Pressable style={[styles.button, {marginLeft: 3, paddingLeft: 3} ]}  onPress={() => {\n        if (ref == true){\n          setRef(false)\n        }else{\n          setRef(true)\n        }\n      }}>\n            <Text style={[styles.pressText, {color: '#e86868'}]}>Refresh</Text>\n      </Pressable>\n\n      <Pressable style={[styles.button, {marginLeft: 3, paddingLeft: 3} ]}  onPress={() =>  {\n        const auth = {\n          id: 0,\n          token: 0\n        }\n        \n        const save = async() => {\n          try{\n            await AsyncStorage.setItem(\"userAuth\", JSON.stringify(auth));                     \n          }catch(err){\n            console.log(err)\n          }\n        }     \n        \n        save();\n        navigation.reset({\n          index: 0,\n          routes: [{name: 'Login'}]\n        })\n        }}>\n            <Text style={[styles.pressText, {color: '#e86868'}]}>Logout</Text>\n      </Pressable>\n\n      </View>\n\n      <ScrollView contentContainerStyle={styles.scroll}>\n        {posts.map((post) => (          \n            <SpPost \n              key={post.post_id}\n              post={post.post_id}\n              user_id={auth.id}\n              user={true}\n              first_name={post.author.first_name}\n              last_name={post.author.last_name}\n              time={post.timestamp}\n              text={post.text}\n              likes={post.numLikes}\n              author={post.author.user_id}    \n              token={auth.token}      \n            />\n        ))}\n\n        \n\n      </ScrollView>\n\n      </View>\n        \n      \n\n\n    </View>    \n  );\n}\n\nexport default MyPage;"]},"metadata":{},"sourceType":"module"}