{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useRoute } from '@react-navigation/native';\nimport SpRequest from \"../components/request\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  center: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',\n    height: '100%'\n  },\n  scroll: {\n    paddingBottom: 50,\n    paddingLeft: 30,\n    paddingRight: 30\n  },\n  users: {\n    top: 50\n  },\n  searchbar: {\n    elevation: 20,\n    shadowColor: '#52006A',\n    borderRadius: 20,\n    flexDirection: 'row',\n    width: 200,\n    backgroundColor: \"white\",\n    alignItems: 'center',\n    marginTop: '10%',\n    height: \"7%\"\n  },\n  input: {\n    flex: 5,\n    paddingLeft: 20\n  },\n  button: {\n    flex: 3,\n    backgroundColor: '#F1D0C5',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopEndRadius: 20,\n    borderBottomEndRadius: 20\n  },\n  top: {\n    flexDirection: 'row',\n    backgroundColor: '#F1D0C5',\n    borderRadius: 20,\n    width: '30%',\n    height: '5%',\n    justifyContent: 'center',\n    top: '5%'\n  },\n  button2: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar AddFriends = function AddFriends(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      term = _useState4[0],\n      setTerm = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      st = _useState6[0],\n      setSt = _useState6[1];\n\n  var abortController = new AbortController();\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadingT = _useState8[0],\n      setLoadingT = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      auth = _useState10[0],\n      setAuth = _useState10[1];\n\n  useEffect(function () {\n    var getAuth = function getAuth() {\n      var data, auth;\n      return _regeneratorRuntime.async(function getAuth$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userAuth\"));\n\n            case 3:\n              data = _context.sent;\n              auth = JSON.parse(data);\n              setAuth(auth);\n\n              if (Number.isInteger(auth.id)) {\n                setLoadingT(false);\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getAuth();\n    return function cleanup() {\n      abortController.abort();\n    };\n  });\n  useEffect(function () {\n    var page = function page() {\n      var xhttp;\n      return _regeneratorRuntime.async(function page$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (term.length <= 0) {\n                setTerm('');\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/search?q=' + term, {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': auth.token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                setSearch(text);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 3:\n              xhttp = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    page();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [term, loadingT, route]);\n  return _jsxs(View, {\n    style: styles.center,\n    children: [_jsx(View, {\n      style: styles.top,\n      children: _jsx(Pressable, {\n        style: [styles.button2, {\n          marginLeft: 3,\n          paddingLeft: 3\n        }],\n        onPress: function onPress() {\n          return navigation.navigate('MyPage');\n        },\n        children: _jsx(Text, {\n          style: [styles.pressText, {\n            color: '#e86868',\n            justifyContent: 'center'\n          }],\n          children: \"Home\"\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.searchbar,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setSt(text);\n        },\n        placeholder: \"name..\",\n        keyboardType: \"default\"\n      }), _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setTerm(st);\n        },\n        children: _jsx(Text, {\n          style: styles.pressText,\n          children: \"Search\"\n        })\n      })]\n    }), _jsx(View, {\n      children: _jsx(ScrollView, {\n        contentContainerStyle: styles.scroll,\n        children: search.map(function (user) {\n          return _jsx(SpRequest, {\n            user_givenname: user.user_givenname,\n            user_familyname: user.user_familyname,\n            user_id: user.user_id,\n            token: auth.token\n          }, user.user_id);\n        })\n      })\n    })]\n  });\n};\n\nexport default AddFriends;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/Pages/AddFriends.js"],"names":["React","useEffect","useState","useRoute","SpRequest","AsyncStorage","styles","StyleSheet","create","center","alignItems","backgroundColor","height","scroll","paddingBottom","paddingLeft","paddingRight","users","top","searchbar","elevation","shadowColor","borderRadius","flexDirection","width","marginTop","input","flex","button","justifyContent","borderTopEndRadius","borderBottomEndRadius","button2","AddFriends","navigation","route","search","setSearch","term","setTerm","st","setSt","abortController","AbortController","loadingT","setLoadingT","auth","setAuth","getAuth","getItem","data","JSON","parse","Number","isInteger","id","console","log","cleanup","abort","page","length","fetch","method","headers","token","then","response","json","text","catch","res","xhttp","marginLeft","navigate","pressText","color","map","user","user_givenname","user_familyname","user_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, TextInput, View, StyleSheet, Pressable, ScrollView, Alert } from 'react-native';\nimport {useRoute} from '@react-navigation/native';\n\nimport SpRequest from '../components/request';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst styles = StyleSheet.create({\n  center: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',\n    height: '100%' \n  },\n  scroll:{\n    paddingBottom: 50,\n    paddingLeft: 30,\n    paddingRight: 30\n  },\n  users: {\n    top: 50,\n  },\n  searchbar:{\n    elevation: 20,\n    shadowColor: '#52006A',\n    borderRadius: 20,\n    flexDirection: 'row',\n    width: 200, \n    backgroundColor: \"white\",\n    alignItems: 'center',\n    marginTop: '10%', \n    height: \"7%\",\n  },\n  input:{\n    flex: 5,  \n    paddingLeft: 20,    \n  },\n  button:{\n    flex: 3,\n    backgroundColor: '#F1D0C5',\n    height: '100%',    \n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopEndRadius: 20,\n    borderBottomEndRadius: 20,\n  },\n  top:{\n    flexDirection: 'row',\n    backgroundColor: '#F1D0C5',\n    borderRadius: 20,\n    width: '30%',\n    height: '5%',\n    justifyContent: 'center',\n    top: '5%'\n  },\n  button2:{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\n\n\nconst AddFriends = ({navigation}) => {\n  const route = useRoute();\n\n  const [search, setSearch] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const [st, setSt] = useState(\"\");\n\n  const abortController = new AbortController();\n\n  const [loadingT, setLoadingT] = useState(true);\n  const [auth, setAuth] = useState([]);\n  useEffect (() =>\n  {\n    const getAuth = async() =>{\n      try{\n        let data = await AsyncStorage.getItem(\"userAuth\");\n        var auth = JSON.parse(data)\n        //console.log(JSON.parse(auth))\n        //console.log(auth.id)\n\n        setAuth(auth);\n\n        if(Number.isInteger(auth.id)){\n          setLoadingT(false);\n        }\n      }catch(err) {\n        console.log(err)\n      }\n    }\n\n    getAuth();\n\n    return function cleanup(){\n      abortController.abort()\n    }\n  });\n\n  useEffect(() => {\n  const page = async () => {\n\n    if (term.length <= 0){\n      setTerm('')\n    }\n    const xhttp = await fetch('http://localhost:3333/api/1.0.0/search?q='+term, {\n                  method: 'GET',\n                  headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'X-Authorization': auth.token,\n                  }\n                })\n                .then((response) => response.json())\n                .then((text) => {\n                    setSearch(text);                 \n                })\n                .catch(function (res){\n                  console.log(res)\n                });\n  }\n\n  page();\n\n  return function cleanup() {\n    abortController.abort()\n  }\n\n  },[term, loadingT, route]);\n\n\n  return (\n  \n    \n    <View style={styles.center}>\n\n\n        <View style={styles.top}>\n\n        <Pressable style={[styles.button2, {marginLeft: 3, paddingLeft: 3} ]}  onPress={() => navigation.navigate('MyPage')}>\n              <Text style={[styles.pressText, {color: '#e86868', justifyContent: 'center'}]}>Home</Text>\n        </Pressable>\n\n        </View>\n\n\n        <View style={styles.searchbar}>\n          <TextInput\n              style={styles.input}\n              onChangeText={(text) => setSt(text)}\n              //value={number}\n              placeholder=\"name..\"\n              keyboardType='default'\n          />\n\n          <Pressable style={styles.button} onPress={() => setTerm(st)}>\n            <Text style={styles.pressText}>Search</Text>\n          </Pressable>\n\n        </View>\n\n\n      <View>\n        <ScrollView contentContainerStyle={styles.scroll}>\n          {search.map((user) => (\n            <SpRequest \n              key={user.user_id}\n              user_givenname={user.user_givenname}\n              user_familyname={user.user_familyname}\n              user_id={user.user_id}   \n              token={auth.token}           \n            />\n          ))} \n                 \n          </ScrollView>\n        </View>\n        \n\n\n    </View>\n  );\n}\n\nexport default AddFriends;"]},"metadata":{},"sourceType":"module"}