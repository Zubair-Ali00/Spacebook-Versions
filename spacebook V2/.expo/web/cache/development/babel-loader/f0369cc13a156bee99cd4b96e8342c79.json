{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  post: {\n    width: '90%',\n    backgroundColor: '#C0E2FB',\n    alignItems: 'center',\n    padding: 5,\n    borderRadius: 20,\n    top: 20,\n    marginBottom: 20,\n    elevation: 20,\n    shadowColor: '#52006A'\n  },\n  post1: {\n    flexDirection: 'row',\n    alignSelf: \"baseline\",\n    marginLeft: 10\n  },\n  image: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'white',\n    borderRadius: 40,\n    alignSelf: 'flex-start'\n  },\n  info: {\n    marginLeft: 10\n  },\n  text: {\n    fontWeight: 'bold'\n  },\n  post2: {\n    alignSelf: 'baseline',\n    marginLeft: 20,\n    flexDirection: 'column',\n    marginBottom: 15,\n    marginTop: 15\n  },\n  post3: {\n    flexDirection: 'row'\n  },\n  button: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#A6C3D9'\n  }\n});\n\nfunction like(author, post, token) {\n  var xhttp = fetch('http://localhost:3333/api/1.0.0/user/' + author + '/post/' + post + '/like', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Authorization': token\n    }\n  }).then(function (response) {\n    return response.text();\n  }).then(function (text) {\n    console.log(text);\n  }).catch(function (res) {\n    console.log(res);\n  });\n}\n\nfunction dislike(author, post, token) {\n  var xhttp = fetch('http://localhost:3333/api/1.0.0/user/' + author + '/post/' + post + '/like', {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Authorization': token\n    }\n  }).then(function (response) {\n    return response.text();\n  }).then(function (text) {}).catch(function (res) {\n    console.log(res);\n  });\n}\n\nfunction delete_post(user, post, token) {\n  var xhttp = fetch('http://localhost:3333/api/1.0.0/user/' + user + '/post/' + post, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Authorization': token\n    }\n  }).then(function (response) {\n    return response.text();\n  }).then(function (text) {\n    console.log(text);\n  }).catch(function (res) {\n    console.log(res);\n  });\n}\n\nfunction spPost(props) {\n  var navigation = useNavigation();\n\n  if (props.user == false) {\n    if (props.author == props.user_id) {\n      var _like = false;\n    } else {\n      var _like = true;\n    }\n\n    if (_like == true) {\n      return _jsxs(View, {\n        style: styles.post,\n        children: [_jsxs(View, {\n          style: styles.post1,\n          children: [_jsx(View, {\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.info,\n            children: [_jsxs(Text, {\n              style: styles.text,\n              children: [props.first_name, \" \", props.last_name, \" \", props.author]\n            }), _jsx(Text, {\n              children: props.time\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            borderBottomColor: 'black',\n            borderBottomWidth: 1,\n            width: '100%',\n            paddingTop: 10\n          }\n        }), _jsxs(View, {\n          style: styles.post2,\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [\"\\\"\", props.text, \"\\\"\"]\n          }), _jsxs(Text, {\n            children: [\"Likes : \", props.likes]\n          })]\n        }), _jsxs(View, {\n          style: styles.post3,\n          children: [_jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomStartRadius: 20\n            }],\n            onPress: function onPress() {\n              like(props.friend, props.post, props.token);\n            },\n            children: _jsx(Text, {\n              children: \"Like\"\n            })\n          }), _jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomRightRadius: 20\n            }],\n            onPress: function onPress() {\n              return dislike(props.friend, props.post, props.token);\n            },\n            children: _jsx(Text, {\n              children: \"Dislike\"\n            })\n          })]\n        })]\n      });\n    } else {\n      return _jsxs(View, {\n        style: styles.post,\n        children: [_jsxs(View, {\n          style: styles.post1,\n          children: [_jsx(View, {\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.info,\n            children: [_jsxs(Text, {\n              style: styles.text,\n              children: [props.first_name, \" \", props.last_name, \" \", props.author]\n            }), _jsx(Text, {\n              children: props.time\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            borderBottomColor: 'black',\n            borderBottomWidth: 1,\n            width: '100%',\n            paddingTop: 10\n          }\n        }), _jsxs(View, {\n          style: styles.post2,\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [\"\\\"\", props.text, \"\\\"\"]\n          }), _jsxs(Text, {\n            children: [\"Likes : \", props.likes]\n          })]\n        }), _jsxs(View, {\n          style: styles.post3,\n          children: [_jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomEndRadius: 0,\n              borderBottomStartRadius: 20\n            }],\n            onPress: function onPress() {\n              return navigation.navigate('GetPost', {\n                post: props.post,\n                user: props.friend,\n                token: props.token\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Edit\"\n            })\n          }), _jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomEndRadius: 20,\n              borderBottomStartRadius: 0\n            }],\n            onPress: function onPress() {\n              return delete_post(props.friend, props.post, props.token);\n            },\n            children: _jsx(Text, {\n              children: \"Delete\"\n            })\n          })]\n        })]\n      });\n    }\n  } else {\n    if (props.author == props.user_id) {\n      return _jsxs(View, {\n        style: styles.post,\n        children: [_jsxs(View, {\n          style: styles.post1,\n          children: [_jsx(View, {\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.info,\n            children: [_jsxs(Text, {\n              style: styles.text,\n              children: [props.first_name, \" \", props.last_name, \" \", props.author]\n            }), _jsx(Text, {\n              children: props.time\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            borderBottomColor: 'black',\n            borderBottomWidth: 1,\n            width: '100%',\n            paddingTop: 10\n          }\n        }), _jsxs(View, {\n          style: styles.post2,\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [\"\\\"\", props.text, \"\\\"\"]\n          }), _jsxs(Text, {\n            children: [\"Likes : \", props.likes]\n          })]\n        }), _jsxs(View, {\n          style: styles.post3,\n          children: [_jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomEndRadius: 0,\n              borderBottomStartRadius: 20\n            }],\n            onPress: function onPress() {\n              return navigation.navigate('GetPost', {\n                post: props.post,\n                user: props.user,\n                token: props.token\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Edit\"\n            })\n          }), _jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomEndRadius: 20,\n              borderBottomStartRadius: 0\n            }],\n            onPress: function onPress() {\n              return delete_post(props.author, props.post, props.token);\n            },\n            children: _jsx(Text, {\n              children: \"Delete\"\n            })\n          })]\n        })]\n      });\n    } else {\n      return _jsxs(View, {\n        style: styles.post,\n        children: [_jsxs(View, {\n          style: styles.post1,\n          children: [_jsx(View, {\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.info,\n            children: [_jsxs(Text, {\n              style: styles.text,\n              children: [props.first_name, \" \", props.last_name, \" \", props.author]\n            }), _jsx(Text, {\n              children: props.time\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            borderBottomColor: 'black',\n            borderBottomWidth: 1,\n            width: '100%',\n            paddingTop: 10\n          }\n        }), _jsxs(View, {\n          style: styles.post2,\n          children: [_jsxs(Text, {\n            style: styles.text,\n            children: [\"\\\"\", props.text, \"\\\"\"]\n          }), _jsxs(Text, {\n            children: [\"Likes : \", props.likes]\n          })]\n        }), _jsxs(View, {\n          style: styles.post3,\n          children: [_jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomStartRadius: 20\n            }],\n            onPress: function onPress() {\n              return navigation.navigate('FriendPage', {\n                id: props.author\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Go to Page\"\n            })\n          }), _jsx(Pressable, {\n            style: [styles.button, {\n              borderBottomEndRadius: 20,\n              borderBottomStartRadius: 0\n            }],\n            onPress: function onPress() {\n              return delete_post(props.author, props.post, props.token);\n            },\n            children: _jsx(Text, {\n              children: \"Delete\"\n            })\n          })]\n        })]\n      });\n    }\n  }\n}\n\nexport default spPost;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/components/post.js"],"names":["React","useNavigation","styles","StyleSheet","create","post","width","backgroundColor","alignItems","padding","borderRadius","top","marginBottom","elevation","shadowColor","post1","flexDirection","alignSelf","marginLeft","image","height","info","text","fontWeight","post2","marginTop","post3","button","flex","like","author","token","xhttp","fetch","method","headers","then","response","console","log","catch","res","dislike","delete_post","user","spPost","props","navigation","user_id","_like","first_name","last_name","time","borderBottomColor","borderBottomWidth","paddingTop","likes","borderBottomStartRadius","friend","borderBottomRightRadius","borderBottomEndRadius","navigate","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View,Pressable, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n    post:{\n        width: '90%',\n        backgroundColor: '#C0E2FB',\n        alignItems: 'center',\n        padding: 5,\n        borderRadius: 20,\n        top: 20,\n        marginBottom: 20,\n        elevation: 20,\n        shadowColor: '#52006A',\n    },\n    post1:{\n        flexDirection: 'row',\n        alignSelf: \"baseline\", \n        marginLeft: 10, \n    },\n    image:{\n        width: 40,\n        height: 40,\n        backgroundColor: 'white',\n        borderRadius: 40,\n        alignSelf: 'flex-start'\n    },\n    info:{\n        marginLeft: 10,    \n    },\n    text: {\n        fontWeight: 'bold',\n    },\n    post2:{\n        alignSelf: 'baseline',\n        marginLeft: 20,\n        flexDirection: 'column',\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    post3:{\n        flexDirection: 'row',        \n    },\n    button: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: '#A6C3D9',\n        \n    },\n})\n\nfunction like(author, post, token) {\n    const xhttp = fetch('http://localhost:3333/api/1.0.0/user/'+author+'/post/'+post+'/like', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-Authorization': token,\n              }\n            })\n            .then((response) => response.text())\n            .then((text) => {\n                //do something if you have already liked\n                console.log(text)\n            })\n            .catch(function (res){\n              console.log(res)\n            });\n}\n\nfunction dislike(author, post, token) {\n    const xhttp = fetch('http://localhost:3333/api/1.0.0/user/'+author+'/post/'+post+'/like', {\n              method: 'DELETE',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-Authorization': token,\n              }\n            })\n            .then((response) => response.text())\n            .then((text) => {\n                //do something if you have already liked\n                //console.log(text)\n            })\n            .catch(function (res){\n              console.log(res)\n            });\n}\n\nfunction delete_post(user, post, token) {\n    const xhttp = fetch('http://localhost:3333/api/1.0.0/user/'+user+'/post/'+post, {\n              method: 'DELETE',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-Authorization': token,\n              }\n            })\n            .then((response) => response.text())\n            .then((text) => {\n                //do some this if you have not liked\n                console.log(text)\n            })\n            .catch(function (res){\n              console.log(res)\n            });\n}\n\n\nfunction spPost (props) {\n    const navigation = useNavigation(); \n\n    if (props.user == false){\n\n        if(props.author == props.user_id){\n            var _like = false\n        }else{\n            var _like = true\n        }\n\n        if(_like==true){\n            return (\n                //add function to get total posts from props.username\n    \n                <View style={styles.post}>\n                <View style={styles.post1}>\n\n                    <View style={styles.image}>            \n                    </View>\n\n                    <View style={styles.info}>\n                        <Text style={styles.text}>\n                            {props.first_name} {props.last_name} {props.author}\n                        </Text>\n\n                        <Text>\n                            {props.time}\n                        </Text>\n\n                        \n                        \n                    </View>\n\n                </View>\n                \n                <View style={{\n                    borderBottomColor: 'black',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                    paddingTop: 10,\n                }}/>\n                \n                <View style={styles.post2}>\n                \n                    <Text style={styles.text}>\n                        \"{props.text}\"\n                    </Text>\n\n                    <Text>\n                        Likes : {props.likes}\n                    </Text>\n                    \n                </View>                    \n\n                <View style={styles.post3}>\n\n\n                    <Pressable style={[styles.button, {borderBottomStartRadius: 20}]}  onPress={() => {\n                            like(props.friend, props.post, props.token)\n                        }}>\n                        <Text>Like</Text>\n                    </Pressable>\n    \n                    <Pressable style={[styles.button, {borderBottomRightRadius: 20}]}  onPress={() => dislike(props.friend, props.post, props.token)}>\n                        <Text>Dislike</Text>\n                    </Pressable>\n    \n                    </View>\n                </View>\n            );\n        }\n        else{\n            return (\n                //add function to get total posts from props.username\n    \n                <View style={styles.post}>\n                <View style={styles.post1}>\n\n                    <View style={styles.image}>            \n                    </View>\n\n                    <View style={styles.info}>\n                        <Text style={styles.text}>\n                            {props.first_name} {props.last_name} {props.author}\n                        </Text>\n\n                        <Text>\n                            {props.time}\n                        </Text>\n\n                        \n                        \n                    </View>\n\n                </View>\n                \n                <View style={{\n                    borderBottomColor: 'black',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                    paddingTop: 10,\n                }}/>\n                \n                <View style={styles.post2}>\n                \n                    <Text style={styles.text}>\n                        \"{props.text}\"\n                    </Text>\n\n                    <Text>\n                        Likes : {props.likes}\n                    </Text>\n                    \n                </View>                    \n\n                <View style={styles.post3}>\n\n                    <Pressable style={[styles.button, {borderBottomEndRadius: 0, borderBottomStartRadius: 20}]}  onPress={() => navigation.navigate('GetPost', {\n                                    post: props.post,\n                                    user: props.friend,\n                                    token: props.token\n                                })}>\n                            <Text >Edit</Text>\n                    </Pressable>\n                \n\n                    <Pressable style={[styles.button, {borderBottomEndRadius: 20, borderBottomStartRadius: 0}]} onPress={()=>delete_post(props.friend, props.post, props.token)}>\n                            <Text >Delete</Text>\n                    </Pressable>\n                                        \n    \n                    </View>\n                </View>\n            );\n        }\n        \n    }else{\n        if (props.author==props.user_id){\n            return (\n                //add function to get total posts from props.username\n    \n                <View style={styles.post}>\n                    <View style={styles.post1}>\n    \n                        <View style={styles.image}>            \n                        </View>\n    \n                        <View style={styles.info}>\n                            <Text style={styles.text}>\n                                {props.first_name} {props.last_name} {props.author}\n                            </Text>\n    \n                            <Text>\n                                {props.time}\n                            </Text>\n    \n                            \n                            \n                        </View>\n    \n                    </View>\n                    \n                    <View style={{\n                        borderBottomColor: 'black',\n                        borderBottomWidth: 1,\n                        width: '100%',\n                        paddingTop: 10,\n                    }}/>\n                    \n                    <View style={styles.post2}>\n                    \n                        <Text style={styles.text}>\n                            \"{props.text}\"\n                        </Text>\n    \n                        <Text>\n                            Likes : {props.likes}\n                        </Text>\n                        \n                    </View>                    \n    \n                    <View style={styles.post3}>\n    \n                        \n    \n                        <Pressable style={[styles.button, {borderBottomEndRadius: 0, borderBottomStartRadius: 20}]}  onPress={() => navigation.navigate('GetPost', {\n                                    post: props.post,\n                                    user: props.user,\n                                    token : props.token\n                                })}>\n                            <Text >Edit</Text>\n                        </Pressable>\n                        <Pressable style={[styles.button, {borderBottomEndRadius: 20, borderBottomStartRadius: 0}]} onPress={()=>delete_post(props.author, props.post, props.token)}>\n                            <Text >Delete</Text>\n                        </Pressable>\n    \n                    </View>\n                </View>\n            );\n        } else{\n            return (\n                //add function to get total posts from props.username\n    \n                <View style={styles.post}>\n                    <View style={styles.post1}>\n    \n                        <View style={styles.image}>            \n                        </View>\n    \n                        <View style={styles.info}>\n                            <Text style={styles.text}>\n                                {props.first_name} {props.last_name} {props.author}\n                            </Text>\n    \n                            <Text>\n                                {props.time}\n                            </Text>\n    \n                            \n                            \n                        </View>\n    \n                    </View>\n                    \n                    <View style={{\n                        borderBottomColor: 'black',\n                        borderBottomWidth: 1,\n                        width: '100%',\n                        paddingTop: 10,\n                    }}/>\n                    \n                    <View style={styles.post2}>\n                    \n                        <Text style={styles.text}>\n                            \"{props.text}\"\n                        </Text>\n    \n                        <Text>\n                            Likes : {props.likes}\n                        </Text>\n                        \n                    </View>                    \n    \n                    <View style={styles.post3}>\n        \n                        <Pressable style={[styles.button, {borderBottomStartRadius: 20}]}  onPress={() => navigation.navigate('FriendPage', {id:props.author})}>\n                            <Text>Go to Page</Text>\n                        </Pressable>\n                                  \n                        <Pressable style={[styles.button, {borderBottomEndRadius: 20, borderBottomStartRadius: 0}]} onPress={()=>delete_post(props.author, props.post, props.token)}>\n                            <Text >Delete</Text>\n                        </Pressable>\n    \n                    </View>\n                </View>\n            );\n        }\n\n        \n    }\n}\n\n\nexport default spPost;"]},"metadata":{},"sourceType":"module"}