{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useRoute } from '@react-navigation/native';\nimport SpHeader from \"../components/header\";\nimport SpPost from \"../components/post\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  center: {\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  scroll: {\n    paddingBottom: \"100%\",\n    paddingLeft: 30,\n    paddingRight: 30,\n    width: '100%'\n  },\n  top: {\n    flexDirection: 'row',\n    top: '13%',\n    backgroundColor: '#C3E6FF',\n    borderRadius: 20,\n    width: '40%',\n    height: '5%'\n  },\n  button: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  posts: {\n    backgroundColor: 'white',\n    width: '100%',\n    top: '8%',\n    alignItems: 'center',\n    borderTopEndRadius: 20,\n    borderTopStartRadius: 20,\n    paddingBottom: 60\n  }\n});\n\nfunction FriendPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var route = useRoute();\n  var abortController = new AbortController();\n  var id = route.params.id;\n  var token = route.params.token;\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingT = _useState4[0],\n      setLoadingT = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ref = _useState6[0],\n      setRef = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      auth = _useState8[0],\n      setAuth = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      det = _useState10[0],\n      setDet = _useState10[1];\n\n  useEffect(function () {\n    var getAuth = function getAuth() {\n      var data, auth;\n      return _regeneratorRuntime.async(function getAuth$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userAuth\"));\n\n            case 3:\n              data = _context.sent;\n              auth = JSON.parse(data);\n              setAuth(auth);\n\n              if (Number.isInteger(auth.id)) {\n                setLoadingT(false);\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getAuth();\n    return function cleanup() {\n      abortController.abort();\n    };\n  });\n  useEffect(function () {\n    var details = function details() {\n      var xhttp;\n      return _regeneratorRuntime.async(function details$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + id, {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                setDet(text);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 2:\n              xhttp = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    details();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [loadingT]);\n  useEffect(function () {\n    var abortController = new AbortController();\n\n    var page = function page() {\n      var xhttp;\n      return _regeneratorRuntime.async(function page$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + id + '/post', {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (text) {\n                setPosts(text);\n              }).catch(function (res) {\n                console.log(res);\n              }));\n\n            case 2:\n              xhttp = _context3.sent;\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    page();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [det, ref]);\n  return _jsxs(View, {\n    style: styles.center,\n    children: [_jsx(SpHeader, {\n      first_name: det.first_name,\n      last_name: det.last_name\n    }), _jsxs(View, {\n      style: styles.top,\n      children: [_jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('GetPost', {\n            user: id,\n            action: \"add\",\n            post: 0,\n            token: auth.token\n          });\n        },\n        children: _jsx(Text, {\n          style: [styles.pressText, {\n            color: '#689be8'\n          }],\n          children: \"Add Post\"\n        })\n      }), _jsx(Pressable, {\n        style: [styles.button, {\n          marginLeft: 3,\n          paddingLeft: 3\n        }],\n        onPress: function onPress() {\n          if (ref == true) {\n            setRef(false);\n          } else {\n            setRef(true);\n          }\n        },\n        children: _jsx(Text, {\n          style: [styles.pressText, {\n            color: '#e86868'\n          }],\n          children: \"Refresh\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.posts,\n      children: _jsx(ScrollView, {\n        contentContainerStyle: styles.scroll,\n        children: posts.map(function (post) {\n          return _jsx(SpPost, {\n            post: post.post_id,\n            first_name: post.author.first_name,\n            last_name: post.author.last_name,\n            time: post.timestamp,\n            text: post.text,\n            likes: post.numLikes,\n            author: post.author.user_id,\n            user: false,\n            friend: id,\n            user_id: auth.id,\n            token: auth.token\n          }, post.post_id);\n        })\n      })\n    })]\n  });\n}\n\nexport default FriendPage;","map":{"version":3,"sources":["/Users/blackbeats/Documents/TelegramWork/reactNative/spacebook/Pages/FriendPage.js"],"names":["React","useEffect","useState","useRoute","SpHeader","SpPost","AsyncStorage","styles","StyleSheet","create","center","backgroundColor","flexDirection","alignItems","scroll","paddingBottom","paddingLeft","paddingRight","width","top","borderRadius","height","button","flex","justifyContent","posts","borderTopEndRadius","borderTopStartRadius","FriendPage","navigation","setPosts","route","abortController","AbortController","id","params","token","loadingT","setLoadingT","ref","setRef","auth","setAuth","det","setDet","getAuth","getItem","data","JSON","parse","Number","isInteger","console","log","cleanup","abort","details","fetch","method","headers","then","response","json","text","catch","res","xhttp","page","first_name","last_name","navigate","user","action","post","pressText","color","marginLeft","map","post_id","author","timestamp","numLikes","user_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View,Pressable, ScrollView, StyleSheet } from 'react-native';\n\nimport {useRoute} from '@react-navigation/native';\n\nimport SpHeader from '../components/header';\nimport SpPost from '../components/post';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst styles = StyleSheet.create({\n  center: {\n    backgroundColor: 'rgba(39, 154, 241, 0.98)',    \n    flexDirection: 'column',\n    alignItems: 'center',\n    //justifyContent: 'space-between'\n  },\n  scroll:{\n    paddingBottom: \"100%\",\n    paddingLeft: 30,\n    paddingRight: 30,\n    width: '100%'\n  },\n  top:{\n    flexDirection: 'row',\n    top: '13%',\n    backgroundColor: '#C3E6FF',\n    borderRadius: 20,\n    width: '40%', \n    height: '5%',\n  },\n  button:{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  posts:{\n    backgroundColor: 'white',\n    width: '100%',\n    top: '8%',\n    alignItems: 'center',\n    borderTopEndRadius: 20,\n    borderTopStartRadius : 20,\n    paddingBottom: 60\n  }\n})\n\n\n\n\nfunction FriendPage({navigation}) {\n  //const [info, setInfo] = useState({});\n  const [posts,setPosts] = useState([]);\n\n  const route = useRoute();\n  const abortController = new AbortController();\n\n  var id = route.params.id;\n  var token = route.params.token;\n\n  const [loadingT, setLoadingT] = useState(true);\n  const[ref, setRef] = useState(true);\n\n  const [auth, setAuth] = useState([]);\n\n  const [det, setDet] = useState([]);\n\n  \n  \n  useEffect (() =>\n  {\n    const getAuth = async() =>{\n      try{\n        let data = await AsyncStorage.getItem(\"userAuth\");\n        var auth = JSON.parse(data)\n        //console.log(JSON.parse(auth))\n        //console.log(auth.id)\n\n        setAuth(auth);\n\n        if(Number.isInteger(auth.id)){\n          setLoadingT(false);\n        }\n      }catch(err) {\n        console.log(err)\n      }\n    }\n\n    getAuth();\n\n    return function cleanup(){\n      abortController.abort()\n    }\n  });\n\n  //console.log(id)\n  //token = route.params.token;\n  useEffect(() => {\n    \n    const details = async () => {          \n      const xhttp = await fetch('http://localhost:3333/api/1.0.0/user/'+id, {\n                    method: 'GET',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-Authorization': token,\n                    }\n                  })\n                  .then((response) => response.json())\n                  .then((text) => {          \n                    setDet(text)\n                  })\n                  .catch(function (res){\n                    console.log(res)\n                  });\n  }\n\n  details();\n\n  return function cleanup(){\n    abortController.abort()\n  }\n  },[loadingT]);\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const page = async () => {\n      const xhttp = await fetch('http://localhost:3333/api/1.0.0/user/'+id+'/post', {\n                    method: 'GET',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-Authorization': token,\n                    }\n                  })\n                  .then((response) => response.json())\n                  .then((text) => {\n                    setPosts(text);                    \n                      //console.log(posts)\n                  })\n                  .catch(function (res){\n                    console.log(res)\n                  });\n      \n    }\n\n    page();\n\n    return function cleanup() {\n      abortController.abort()\n    }\n  }, [det , ref]);\n\n\n  \n  return (  \n  \n    <View style={styles.center}>\n          <SpHeader\n          first_name={det.first_name}\n          last_name={det.last_name}\n        />\n\n        <View style={styles.top}>\n          \n          <Pressable style={styles.button} onPress={() => navigation.navigate('GetPost', {                            \n                                user: id,\n                                action: \"add\",\n                                post: 0,\n                                token: auth.token\n                            })}>\n            <Text style={[styles.pressText, {color: '#689be8'}]}>Add Post</Text>\n          </Pressable>\n\n          <Pressable style={[styles.button, {marginLeft: 3, paddingLeft: 3} ]}  onPress={() => {\n            if (ref == true){\n              setRef(false)\n            }else{\n              setRef(true)\n            }\n          }}>\n                <Text style={[styles.pressText, {color: '#e86868'}]}>Refresh</Text>\n          </Pressable>\n\n        </View>\n\n        <View style={styles.posts}>\n\n        <ScrollView contentContainerStyle={styles.scroll}>\n            {posts.map((post) => (          \n                <SpPost \n                key={post.post_id}\n                post={post.post_id}\n                first_name={post.author.first_name}\n                last_name={post.author.last_name}\n                time={post.timestamp}\n                text={post.text}\n                likes={post.numLikes}\n                author={post.author.user_id}                  \n                user={false}     \n                friend={id}  \n                user_id={auth.id}   \n                token={auth.token}        \n                />\n            ))}      \n        </ScrollView>\n\n        </View>\n\n            \n\n\n\n      </View>\n\n  );\n}\n\nexport default FriendPage;"]},"metadata":{},"sourceType":"module"}